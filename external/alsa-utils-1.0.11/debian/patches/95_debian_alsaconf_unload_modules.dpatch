#!/bin/sh -e
##
## 95_debian_alsaconf_unload_modules.dpatch by Thomas Hood
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Run initscript force-unload method rather than stop
## DP: and do it after the intro rather than before

if [ $# -lt 1 ]; then
    echo "`basename $0`: script expects -patch|-unpatch as argument" >&2
    exit 1
fi

[ -f debian/patches/00patch-opts ] && . debian/patches/00patch-opts
patch_opts="${patch_opts:--f --no-backup-if-mismatch} ${2:+-d $2}"

case "$1" in
    -patch) patch -p1 ${patch_opts} < $0;;
    -unpatch) patch -R -p1 ${patch_opts} < $0;;
    *)
        echo "`basename $0`: script expects -patch|-unpatch as argument" >&2
        exit 1;;
esac

exit 0

@DPATCH@
diff -urNad --exclude=CVS --exclude=.svn ./alsaconf/alsaconf.in /tmp/dpep-work.CMIxLX/alsa-utils-1.0.10rc1/alsaconf/alsaconf.in
--- ./alsaconf/alsaconf.in	2005-08-24 17:04:32.000000000 +0200
+++ /tmp/dpep-work.CMIxLX/alsa-utils-1.0.10rc1/alsaconf/alsaconf.in	2005-08-24 17:05:57.000000000 +0200
@@ -512,11 +512,13 @@
 
     
 # MAIN
+if false; then # In Debian don't do this
 if [ -d $PROCFS/asound ]; then
   $rcalsasound stop >/dev/null 2>&1
   $rcalsasound unload >/dev/null 2>&1
   /sbin/rmmod dmasound dmasound_awacs 2>/dev/null
 fi
+fi
 
 
 cleanup () {
@@ -1308,6 +1310,24 @@
     date >> "$LOGFILE"
 fi
 
+intro
+
+[ -x /etc/init.d/alsa ] && /etc/init.d/alsa force-unload
+
+if [ -d /proc/asound ]; then
+  /sbin/rmmod dmasound dmasound_awacs 2>/dev/null
+fi
+
+# Try to unload all sound modules
+for S in OSS ALSA ; do
+	L="/usr/share/linux-sound-base/${S}-module-list"
+	if [ -r "$L" ] ; then
+		for M in $(sed -e 's/#.*//' -e '/^[[:space:]]*$/d' "$L") ; do
+			[ "$M" ] && /sbin/modprobe -r "$M" >/dev/null 2>&1 || :
+		done
+	fi
+done
+
 if [ x"$legacy_probe_card" != x ]; then
     ac_opts=""
     if eval ac_try_card_$legacy_probe_card >/dev/null 2>&1; then
@@ -1320,8 +1340,6 @@
     fi
 fi
 
-intro
-
 if [ $do_legacy_only = 1 ]; then
     ac_config_legacy
     exit 0
