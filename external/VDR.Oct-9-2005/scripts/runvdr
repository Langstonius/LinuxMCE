#!/bin/bash -p
# plutohome runvdrdevel for MD's WITHOUT dvb-card drivers
# should be always initialized by standard installation


OPTIONS="$*"
VDRCMD="/usr/bin/vdrdevel $OPTIONS"

. /usr/lib/vdrdevel/config-loader.sh

if [ "$NONPTL" = "1" -a `uname -m` != x86_64 ]; then
    VDRCMD="LD_ASSUME_KERNEL=2.4.1 $VDRCMD"
fi

KVERS_2_6=`uname -r | grep -e '2.6'`

function get_modulenames()
{
    if [ "$KVERS_2_6" ]; then
        MODULES=`lsmod | grep ^dvb_core | awk '{print $4;}' | awk '{ gsub(/,/," ", $1); print }'`
        [ "$MODULES" ] && MODULES="$MODULES dvb_core"
    else
        MODULES=`lsmod | grep dvb-core | cut -d'[' -f2 | cut -d']' -f1`
        [ "$MODULES" ] && MODULES="$MODULES dvb-core"
    fi
}

function set_permissions()
{
    if [ "$USER" -o "$GROUP" ]; then
        for FILE in av7110_ir budget_ci_ir; do
            if [ -e "/proc/$FILE" ]; then
                chown $USER.$GROUP /proc/$FILE
            fi
        done
    fi
    chmod o+r /dev/input/event*
}


VDR_ERR=`mktemp -p /tmp vdrdevel-err.XXXXXX`

get_modulenames

[ -z "$MODULES" ] && load_dvb_modules

while (true) do

    set_permissions

    eval $VDRCMD >/dev/null 2>"$VDR_ERR"

    case $? in
        0)
            exit
        ;;
        2)
            ERROR=`cat "$VDR_ERR"`
            logger -t runvdrdevel "stopping after fatal fail ($ERROR)"
            exit
        ;;
    esac

    logger -t runvdrdevel "restarting VDR"
    killall -q -TERM /usr/bin/vdrdevel
    wait `pidof vdrdevel`
    sleep 2

done
