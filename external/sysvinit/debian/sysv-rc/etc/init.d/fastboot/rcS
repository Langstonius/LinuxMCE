#!/bin/bash

Message() {
    echo -e "\033[1m# $*"
    tput sgr0

    # Update boot splash progress bar    
    progress=$(( $progress + 1 ))
    if [ -x /sbin/splash.sh ]; then
        /sbin/splash.sh "dummy_service"
    fi
}

InitBootsplash() {
    progress=0
    kscripts=0
    sscripts=19
    export progress kscripts sscripts
}

## Some defaults
PATH=/sbin:/usr/sbin:/bin:/usr/bin
runlevel=S
prevlevel=N
umask 022
export PATH runlevel prevlevel
InitBootsplash

## Mount the proc filesystem
Message "Mounting /proc filesystem"
/bin/mount -v proc /proc -n -t proc

## Mount the sysfs, if the kernel supports it
Message "Mounting /sys filesystem"
if [ -d /sys ] ;then
	if cat /proc/filesystems | grep -w sysfs 1> /dev/null 2> /dev/null ;then
		if ! cat /proc/mounts | grep -w sysfs 1> /dev/null 2> /dev/null ;then
			/bin/mount -v sysfs /sys -n -t sysfs
		fi
	fi
fi

## Initalize udev
Message "Initializing udev"
/etc/init.d/udev start 1>/dev/null

## Loading modules
Message "Loading modules"
(cat /etc/modules; echo) | # make sure there is a LF at the end
while read module args
do
        case "$module" in
                \#*|"") continue ;;
        esac
        modprobe $module $args
done

## Initializing coldplug system (lshwd or hotplug)
Message "Loading coldplug modules"
if [ -x /usr/bin/lshwd ] ;then
    /usr/bin/lshwd -a > /dev/null
    # mousedev doesn't autoload, so we use hotplug for input to be safe
    /etc/hotplug/input.rc start >/dev/null
else 
    if [ -x /etc/init.d/hotplug ] ;then
        /etc/init.d/hotplug start > /dev/null
    fi
fi

## Enable Swaping
Message "Enable swaping"
/sbin/swapon -a > /dev/null

## Check Filesystem
if [ ! -f /fastboot ] ;then
	if [ -f /forcefsck ] ;then
		force='-f'
	else
		force=''
	fi

	fsck -R -A -a $force 

	if [ $? -gt 1 ] ;then
		echo
		echo "fsck failed. Please repair manualy."
		echo
		echo "CONTROL-D will exit form this shell and continue system startup."
		echo

		/sbin/sulogin 
	fi
fi
rm -f /fastboot /forcefsck

## Clean up the /etc/mtab
Message "Cleaning up /etc/mtab"
/bin/rm -rf /etc/mtab* 2>/dev/null
/bin/mount -w -o remount /
if [ -d /proc/sys ] ;then
	/bin/mount -f proc /proc -t proc
fi
if [ -d /sys/bus ] ;then
	/bin/mount -f sysfs /sys -t sysfs
fi
/etc/init.d/udev-mtab start > /dev/null

## Seting up the system time from the hardware clock
Message "Setting up the system time from the hardware clock"
. /etc/default/rcS #FIXME: Should i put it on a separate config file ?
if [ "$UTC" == "yes" ] ;then
	/sbin/hwclock --utc --hctosys > /dev/null
else 
	/sbin/hwclock --localtime --hctosys > /dev/null
fi

## Configure runtime kernel parameters
Message "Configuring runtime kernel parameters"
if [ -x /sbin/sysctl -a -r /etc/sysclt.conf ] ;then 
	/sbin/sysctl -e -p /etc/sysctl.conf > /dev/null
fi

## Check all non-root filesystems
Message "Check/Mount all local non-root filesystems"
if [ ! -r /etc/fastboot  ]; then
	/sbin/fsck $force -C -R -A -a
fi

## Mount all local non root filsystems except /proc witch was allready mounted
/bin/mount -a -v -t nonfs,nosmbfs,noproc > /dev/null

## Create /tmp/{.ICE-unix, .X11-unix} if they are not present
rm -rf /tmp/* 2>/dev/null

if [ ! -e /tmp/.ICE-unix ] ;then
	mkdir -p /tmp/.ICE-unix 
	chmod 1777 /tmp/.ICE-unix
fi
if [ ! -e /tmp/.X11-unix ] ;then
	mkdir -p /tmp/.X11-unix
	chmod 1777 /tmp/.X11-unix
fi

## Umount and remove prosible /initrd
if [ -d /initrd ] ;then
	umount /initrd/proc 2> /dev/null
	/bin/umount /initrd 2> /dev/null
	rmdir /initrd 2> /dev/null
	blockdev --flushbufs /dev/ram0 2> /dev/null
fi

## Create a fresh utmp file
touch /var/run/utmp
chown root.utmp /var/run/utmp
chmod  664 /var/run/utmp

## Set up the hostname
Message "Setting up the hostname"
if [ -f /etc/hostname ] ;then
	hostname --file /etc/hostname
fi

## Start up the networking
Message "Start up networking"
/etc/init.d/ifupdown-clean start 1> /dev/null
/etc/init.d/ifupdown   start     1> /dev/null # Remove when droping the 
/etc/init.d/networking start     1> /dev/null # Uptate_Packages script ?
/etc/init.d/inetd      start     1> /dev/null # Starts tftp on Core and Hybrid
/etc/init.d/portmap    start     1> /dev/null # Search me ! :/

## Now we can safely mount remoute filesystems (in background ?)
Message "Mounting remote filesystems"
/etc/init.d/mountnfs.sh start 1> /dev/null &

# A hack ?

if [ -x /etc/init.d/mysql ] ;then
    Message "Starting mysql server"
    /etc/init.d/mysql start 2>/dev/null
fi

if [ -x  /etc/init.d/Pluto_Update_Packages.sh ] ;then
    Message "Checking for pdates"
    /etc/init.d/Pluto_Update_Packages.sh
fi

if [ -x /etc/init.d/Pluto_Start_DCERouter.sh ] ;then
    Message "Starting DCE Router"
    /etc/init.d/Pluto_Start_DCERouter.sh
fi

if [ -x /etc/init.d/Pluto_Start_OrbiterGen.sh ] ;then
    Message "Starting OrbiterGen"
    /etc/init.d/Pluto_Start_OrbiterGen.sh
fi


if [ -x /etc/init.d/Pluto_Start_X.sh ] ;then
    Message "Starting X Server"
    /etc/init.d/Pluto_Start_X.sh
fi

if [ -x /etc/init.d/Pluto_Start_LocalDevices.sh ] ;then
    Message "Starting Local Devices"
    /etc/init.d/Pluto_Start_LocalDevices.sh
fi