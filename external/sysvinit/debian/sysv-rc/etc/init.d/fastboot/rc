#!/bin/bash
#
# CHANGELOG
#   * Initial Release
#  -- Razvan Gavril <razvan.g@plutohome.com>
#

# AddService <rcX.d symlink>
AddService() {
    local rcFile="$1"
    local initFile=$( readlink -f $rcFile )
    if [[ -x "$initFile" ]]; then
	echo "$(basename $initFile) \\" >> /etc/init.d/fastboot/services.mk
    fi
}

NewServices() {
    # Create the services makefile header
    touch /etc/init.d/fastboot/services.mk

    echo "# This file was automaticaly generated by Pluto " > /etc/init.d/fastboot/services.mk
    echo "# DO NOT MODIFY ! :"                             >> /etc/init.d/fastboot/services.mk
    echo "#"                                               >> /etc/init.d/fastboot/services.mk 
    echo "# DATE:"                                         >> /etc/init.d/fastboot/services.mk 
    echo "# $(date -R)"                                    >> /etc/init.d/fastboot/services.mk
    echo "#"                                               >> /etc/init.d/fastboot/services.mk 
    echo "ALL = \\"                                        >> /etc/init.d/fastboot/services.mk

}

InitBootSplash() {
    local RUNLEVEL=$1
    local PREVLEVEL=$2
    local runrc=/etc/rc${RUNLEVEL}.d

    if [ -f /tmp/bootsplash_progress -a -f /tmp/bootsplash_sscripts -a -f /tmp/bootsplash_kscripts ] ;then
        progress=`cat /tmp/bootsplash_progress`	
	rm -f /tmp/bootsplash_progress
        sscripts=`cat /tmp/bootsplash_sscripts`
        rm -f /tmp/bootsplash_sscripts
	kscripts=`cat /tmp/bootsplash_kscripts`
	rm -f /tmp/bootsplash_kscripts
    else
        progress=0

        SSC=($runrc/S*)
        case "$SSC" in
            *\*) sscripts=0 ;;
            *) sscripts=${#SSC[*]}
        esac

	if [ "$PREVLEVEL" != "N" ]; then
	    KSC=($runrc/K*)
	    case "$KSC" in
        	*\*) kscripts=0 ;;
        	*) kscripts=${#KSC[*]}
	    esac
	else
	    kscripts=0
	fi
    fi

    export progress kscripts sscripts
    export progressOffset=$progress
}


## Some defaults
trap ":" INT QUIT TSTP               # Ignore CTRL-C only in this shell, so we can interrupt subprocesses.
stty onlcr 0>&1                      # Set onlcr to avoid staircase effect.
mkdir /var/lock/subsys 2>/dev/null   # make needs this for locks
rm -rf /var/run/plutoboot
mkdir /var/run/plutoboot 2>/dev/null # make does some logging here (important for rc.display.sh too)

## Now find out what the current and what the previous runlevel are.
runlevel=$RUNLEVEL
[ "$1" != "" ] && runlevel=$1
if [ "$runlevel" = "" ] ;then
    echo "Usage: $0 <runlevel>" >&2
    exit 1
fi

previous=$PREVLEVEL
[ "$previous" = "" ] && previous=N

export runlevel previous


## Init the bootsplash parameters
InitBootSplash $runlevel $previous
/etc/init.d/fastboot/rc.display.sh &
pidDisplay=$!


## Run the stop scripts for this runlevel
if [ $previous != N ] ;then
    NewServices
    for rcFile in /etc/rc$runlevel.d/K*
    do
	AddService "$rcFile"
    done
    /etc/init.d/fastboot/depend/generateDep.sh $runlevel stop
    make -k -i -j -f /etc/init.d/fastboot/rc.mk RUNLEVEL=$runlevel JOB=stop &
    pidMakeStop=$!    
    wait $pidMakeStop
fi


## Run the start scripts for this runlevel
NewServices
for rcFile in /etc/rc$runlevel.d/S*
do
    AddService "$rcFile"
done
/etc/init.d/fastboot/depend/generateDep.sh $runlevel start
make -k -i -j -f /etc/init.d/fastboot/rc.mk RUNLEVEL=$runlevel JOB=start &
pidMakeStart=$!
wait $pidMakeStart

sleep 0.5
kill -9 $pidDisplay 2>/dev/null 1>/dev/null

