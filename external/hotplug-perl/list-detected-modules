#!/usr/bin/perl
#
# Filename..........: $RCSfile: list-detected-modules,v $
# Original Author...: Anthony L. Awtrey
# Version...........: $Revision: 1.1 $
# Last Modified By..: $Author: aawtrey $
# Last Modified On..: $Date: 2005/06/06 14:38:35 $
#
# Copyright 2005 I.D.E.A.L. Technology Corporation
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
# Purpose: Perl reimplementation of hotplug with a focus on performance
#

use strict;
use warnings;
use lib '/etc/hotplug-perl';

use Hotplug;
use Hotplug::PCI;
use Hotplug::USB;
use Hotplug::ISAPNP;
use Hotplug::IEEE1394;
use Hotplug::INPUT;
use Hotplug::IDE;
use Hotplug::SCSI;

my $SYSMODULE = '/sys/module';
my %BLACKLIST = &generate_blacklist();

my $module;
my $blacklisted;
my $status;

print "\n";
print "Listing all modules that would be loaded if started now:\n\n";

my %PCI_MODULES = &get_all_pci_modules();
if (%PCI_MODULES) {
  print "PCI modules:\n";
  &print_modules(%PCI_MODULES);
  print "\n";
} else {
  print "No PCI modules detected\n";
}

my %USB_MODULES = &get_all_usb_modules();
if (%USB_MODULES) {
  print "USB Modules:\n";
  &print_modules(%USB_MODULES);
  print "\n";
} else {
  print "No USB modules detected\n\n";
}

my %ISAPNP_MODULES = &get_all_isapnp_modules();
if (%ISAPNP_MODULES) {
  print "ISAPNP Modules:\n";
  &print_modules(%ISAPNP_MODULES);
  print "\n";
} else {
  print "No ISAPNP modules detected\n\n";
}

my %IDE_MODULES = &get_all_ide_modules();
if (%IDE_MODULES) {
  print "IDE Modules:\n";
  &print_modules(%IDE_MODULES);
  print "\n";
} else {
  print "No IDE modules detected\n\n";
}

my %SCSI_MODULES = &get_all_scsi_modules();
if (%SCSI_MODULES) {
  print "SCSI Modules:\n";
  &print_modules(%SCSI_MODULES);
  print "\n";
} else {
  print "No SCSI modules detected\n\n";
}

my %INPUT_MODULES = &get_all_input_modules();
if (%INPUT_MODULES) {
  print "Input Modules:\n";
  &print_modules(%INPUT_MODULES);
  print "\n";
} else {
  print "No Input modules detected\n\n";
}

my %IEEE1394_MODULES = &get_all_ieee1394_modules();
if (%IEEE1394_MODULES) {
  print "IEEE1394 Modules:\n";
  &print_modules(%IEEE1394_MODULES);
  print "\n";
} else {
  print "No IEEE1394 modules detected\n\n";
}

format STDOUT_TOP =
    Module             Blacklist            Status
    ----------------   ------------------   --------------------------
.

format STDOUT =
    @<<<<<<<<<<<<<<<   @<<<<<<<<<<<<<<<<<   @<<<<<<<<<<<<<<<<<
    $module,           $blacklisted,        $status
.

sub print_modules() {
  my (%hash) = @_;
  while ( my ($key,$val) = each(%hash) ) {
    $module      = $key;
    $blacklisted = '';
    $status      = 'not loaded';
    if ( $BLACKLIST{$key} ) { $blacklisted = 'blacklisted'; }
    my $tmpdir = $key;
    $tmpdir =~ s/-/_/g;
    if ( -d "$SYSMODULE/$tmpdir" ) { $status = 'loaded'; }
    write;
  }
  $- = 0;
}

# End
