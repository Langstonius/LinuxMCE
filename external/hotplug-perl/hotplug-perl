#!/usr/bin/perl
#
# Filename..........: $RCSfile: hotplug-perl,v $
# Original Author...: Anthony L. Awtrey
# Version...........: $Revision: 1.1 $
# Last Modified By..: $Author: aawtrey $
# Last Modified On..: $Date: 2005/06/06 14:38:35 $
#
# Copyright 2005 I.D.E.A.L. Technology Corporation
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
# Purpose: Perl reimplementation of hotplug with a focus on performance
#

use strict;
use warnings;
use lib '/etc/hotplug-perl';

use Hotplug;
use Hotplug::PCI;
use Hotplug::USB;
use Hotplug::ISAPNP;
use Hotplug::IEEE1394;
use Hotplug::INPUT;
use Hotplug::IDE;
use Hotplug::SCSI;

#
# Verify UID is root
#
unless ( $> == 0 ) {
  die("You must be root to run this program",1);
}

#
# Check for the required argument
#
if ( $#ARGV != 0 ) {
  exit;
}

#
# Check for the required environment variables
#
if ( $ENV{'SEQNUM'} == '' ) {
  exit;
}

if ( $ARGV[0] =~ /^usb$/ ) {

  if ( $ENV{'ACTION'} =~ /\s*add\s*/ && $ENV{'PRODUCT'} && $ENV{'DEVPATH'} ) {
    &Hotplug::logmsg($ENV{'ACTION'} . " " . $ENV{'PRODUCT'}  . " " . $ENV{'DEVPATH'});
    &Hotplug::run_hotplug_scripts('usb');
    my $DEVPATH = $ENV{'DEVPATH'};
    my $device;
    if ( $DEVPATH =~ /([0-9]+\-[0-9]+)$/ ) {
      $device = $1;
    } elsif ( $DEVPATH =~ /([0-9]+\-[0-9]+\:[0-9]+\.[0-9]+)$/ ) {
      $device = $1;
    } else {
      &Hotplug::logmsg("Unknown device path",1);
    }
    &Hotplug::logmsg("Found device: $device");
    &load_usb_modules($device);
  }

} elsif ( $ARGV[0] =~ /^scsi$/ ) {

  if ( $ENV{'ACTION'} =~ /add/ && $ENV{'DEVPATH'} ) {
    &Hotplug::logmsg($ENV{'ACTION'} . " " . $ENV{'PRODUCT'}  . " " . $ENV{'DEVPATH'});
    &Hotplug::run_hotplug_scripts('scsi');
    my $DEVPATH = $ENV{'DEVPATH'};
    my $device;
    if ( $DEVPATH =~ /([0-9a-fA_F]+:[0-9a-fA_F]+:[0-9a-fA_F]+:[0-9a-fA_F]+)$/ ) {
      $device = $1;
    } else {
      &Hotplug::logmsg("Unknown device path",1);
    }
    &Hotplug::logmsg("Found device: $device");
    &load_scsi_modules($device);
  }

} elsif ( $ARGV[0] =~ /^input$/ ) {

  if ( $ENV{'ACTION'} =~ /\s*add\s*/ && $ENV{'PRODUCT'} && $ENV{'DEVPATH'} ) {
    &Hotplug::logmsg($ENV{'ACTION'} . " " . $ENV{'PRODUCT'}  . " " . $ENV{'DEVPATH'});
    &Hotplug::run_hotplug_scripts('input');
    my %device_hash;
    if ( $ENV{'PRODUCT'} =~ /([0-9a-fA-F]+)\/([0-9a-fA-F]+)\/([0-9a-fA-F]+)\/([0-9a-fA-F]+)/ ) {
      $device_hash{'Bus'}     = sprintf("0x%04x",$1);
      $device_hash{'Vendor'}  = sprintf("0x%04x",$2);
      $device_hash{'Product'} = sprintf("0x%04x",$3);
      $device_hash{'Version'} = sprintf("0x%04x",$4);
    } else {
      &Hotplug::logmsg("Unknown input product",1);
    }
    &Hotplug::logmsg("Found device: " . $ENV{'PRODUCT'});
    &load_input_modules(%device_hash);
  }

} elsif ( $ARGV[0] =~ /^ieee1394$/ ) {

  if ( $ENV{'ACTION'} =~ /\s*add\s*/ && $ENV{'GUID'} =~ /[0-9a-zA-Z]{16}/ ) {
    &Hotplug::logmsg($ENV{'SUBSYSTEM'} . " " . $ENV{'ACTION'} . " " . $ENV{'GUID'});
    &Hotplug::run_hotplug_scripts('ieee1394');
    &load_ieee1394_modules($ENV{'GUID'});
  }

}

exit;

1;
__END__
