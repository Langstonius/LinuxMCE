#!/bin/bash

StorageDevice="$1"

. /usr/pluto/bin/SQL_Ops.sh
. /usr/pluto/bin/Config_Ops.sh



## We'll use this for logging
echo >> /var/log/pluto/StorageDevices.log
LOG_NOTE=1
LOG_WARN=2
LOG_ERR=3
UNIQUE_ID=$RANDOM

function Log {
	SEVERITY=$1
	shift

	echo "$SEVERITY $(date) $UNIQUE_ID $*" >> /var/log/pluto/StorageDevices.log
}


Log $LOG_NOTE "CALLED TO MOUNT DEVICE $StorageDevice"


## Try to see if we have this device in the database else exit
Q="SELECT FK_DeviceTemplate, FK_Device_ControlledVia FROM Device WHERE PK_Device='$StorageDevice' LIMIT 1 "
R=$(RunSQL "$Q")
if [[ "$R" = "" ]] ;then
	Log $LOG_WARN "Cannot find device $StorageDevice in the database"
	exit 0
fi

Template=$(Field "1" "$R")
ControlledVia=$(Field "2" "$R")

TPL_GENERIC_INTERNAL_DRIVE=1790
TPL_BUFFALO_HDHG300LAN=1794
TPL_GENERIC_SAMBA_SHARE=1768
TPL_GENERIC_NFS_SHARE=1769

DD_BLOCK_DEVICE=152
DD_SHARE_NAME=126
DD_USERNAME=127
DD_PASSWORD=128

case "$Template" in
	
	## Internal Drive
	$TPL_GENERIC_INTERNAL_DRIVE)
		## It's one of our own internal storage devices
		if [[ "$ControlledVia" == "$PK_Device" ]] ;then
			## Get the block device that we want to mount
			DD_BlockDevice=$(RunSQL "SELECT IK_DeviceData FROM Device_DeviceData WHERE FK_Device=$StorageDevice AND FK_DeviceData=$DD_BLOCK_DEVICE")
			
			## Test to see if the block device is there
			if [[ ! -b "$DD_BlockDevice" ]] ;then
				Log $LOG_ERR "Block device '$DD_BlockDevice' does not exist"
				exit 0
			fi
			
			## Do the mount
			echo "-fstype=auto :$DD_BlockDevice"
		
		## It's a remote internal storage device
		else
			## Get the ip address of the computer that contains that drive
			Q="SELECT IPaddress FROM Device WHERE PK_Device = '$ControlledVia' LIMIT 1"
			IPaddress=$(RunSQL "$Q")

			## Try to see if the computer is up
			ping -qnc 1 -W 1 "$IPaddress" &> /dev/null
			HostIsUp=$?
			if [[ "$HostIsUp" != "0" ]] ;then
				Log $LOG_WARN "Host $IPaddress is not responding to our ping"
				exit 0
			fi
		
			## Do the mount
			echo "-fstype=nfs,udp,proto=udp,soft,timeo=40,retrans=1,retry=2,rsize=8192,wsize=8192 $IPaddress:/mnt/device/$StorageDevice"
		fi
		;;
	
	## Generic Windows Share
	$TPL_GENERIC_SAMBA_SHARE)
		## Get the ip address of the parent (computer or nas that has the share)
		Q="	SELECT 
				Parent.IPaddress 
			FROM 
				Device Child
				LEFT JOIN Device Parent ON Parent.FK_Device = Child.FK_Device_ControledVia
			WHERE 
				Child.PK_Device = '$StorageDevice'
			LIMIT 1
		"
		IPaddress=$(RunSQL "$Q")
		IPaddress=$(Field "1" "$IPaddress")

		## Test to see if that computer is up and running
		ping -qnc 1 -W 1 "$IPaddress" &> /dev/null
		HostIsUp=$?
		if [[ "$HostIsUp" != 0 ]] ;then
			Log $LOG_WARN "Device with ip '$IPaddress' that has the samba share associated with device '$StorageDevice' is not responding to our ping"
			exit 0
		fi

		## Samba share name
		Q="SELECT IK_DeviceData FROM Device_DeviceData WHERE FK_Device='$StorageDevice' AND FK_DeviceData=$DD_SHARE_NAME"
		Share=$(RunSQL "$Q")
		if [[ "$Share" == "" ]] ;then
			Log $LOG_ERR "Device '$StorageDevice' doesn't have a samba share name associated with it"
			exit 0
		fi
		
		## Username for the samba share
		Q="SELECT IK_DeviceData FROM Device_DeviceData WHERE FK_Device='$StorageDevice' AND FK_DeviceData=$DD_USERNAME"
		Username=$(RunSQL "$Q")

		## Password for the samba share
		Q="SELECT IK_DeviceData FROM Device_DeviceData WHERE FK_Device='$StorageDevice' AND FK_DeviceData=$DD_PASSWORD"
		Password=$(RunSQL "$Q")
		
		## Do the mount
		if [[ "$Username" == "" || "$Username" == "guest" ]] ;then
			echo "-fstype=smbfs,guest,dmask=777,fmask=777 ://${IPaddress}/{$Share}"
		else
			echo "-fstype=smbfs,username=$Username,password=$Password,dmask=777,fmask=777 ://${IPaddress}/${Share}"
		fi
		;;

	$TPL_GENERIC_NFS_SHARE)
		## Get the ip address of the nfs server that has this share
                Q="SELECT IPaddress FROM Device WHERE PK_Device = '$StorageDevice' LIMIT 1"
                IPaddress=$(RunSQL "$Q")

                ## Test to see if that computer is up and running
                ping -qnc 1 -W 1 "$IPaddress" &> /dev/null
                HostIsUp=$?
                if [[ "$HostIsUp" != 0 ]] ;then
                        Log $LOG_WARN "Device with ip '$IPaddress' that has the nfs share associated with device '$StorageDevice' is not responding to our ping"
			exit 0
		fi

		## Shared nfs directory name
                Q="SELECT IK_DeviceData FROM Device_DeviceData WHERE FK_Device=$StorageDevice AND FK_DeviceData=$DD_SHARE_NAME"
                Share=$(RunSQL "$Q")
                if [[ "$Share" == "" ]] ;then
                        Log $LOG_ERR "Device '$StorageDevice' doesn't have a nfs directory name associated with it"
                        exit 0
                fi

		## Do the mount
		echo "-fstype=nfs,udp,proto=udp,soft,timeo=40,retrans=1,retry=2,rsize=8192,wsize=8192 ${IPaddress}:${Share}"
		;;

	## Some unknown device
	*)
		Log $LOG_ERR "Device $StorageDevice has unknown mount device template ($Template') so i cannot mount it"
		exit 0
		;;
esac

exit 0
