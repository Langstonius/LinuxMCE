#<-dceag-mh-b->
GENDEV=../Gen_Devices

SNR_CPPFLAGS ?= <-mkr_t_compile_defines->
SNR_LDFLAGS ?= <-mkr_t_compile_libs->

ROOT = ..

CXXFLAGS = -Wall -fPIC -ggdb3
CPPFLAGS = -I$(ROOT) -I$(ROOT)/DCE -I/usr/include/mysql $(SNR_CPPFLAGS)
LDFLAGS = $(SNR_LDFLAGS) -L$(ROOT)/lib 
BASELDLIBS = -lSerializeClass -lDCECommon -lPlutoUtils -lmysqlclient_r -lpthread -lSerial

MYNAME = HAL
VERSION = 2.0.0
MYDEVTEMPLATEID = 1808mplateID

Gen_Dev_Files = $(GENDEV)/HALBase.cpp
sources = Main.cpp HAL.cpp $(Gen_Dev_Files)
#<-dceag-mh-e->

CPPFLAGS += -I/usr/include/dbus-1.0/ -I/usr/include/hal \
	-I/usr/lib/dbus-1.0/include -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include \
	-DDBUS_API_SUBJECT_TO_CHANGE -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE \
	$(SNR_CPPFLAGS) -DUSE_LZO_DATAGRID -D_GNU_SOURCE
CXXFLAGS += -Wno-deprecated
LDFLAGS +=
XTRALDLIBS = -lSerial -ldbus-glib-1 -lgthread-2.0 -ldbus-1 -lglib-2.0 -lhal

Gen_Dev_Files +=
sources += pluto-hald.cpp seriald.cpp

#<-dceag-mf-b->
LDLIBS = $(XTRALDLIBS) $(BASELDLIBS)

whattodo:
	@echo "type 'make bin', 'make so' or 'make all'"

all: bin so

bin: ../bin/$(MYNAME)

so: ../lib/$(MYNAME).so

$(MYNAME).so: $(sources:.cpp=.o)
	$(CXX) -shared -o $(MYNAME).so $(call cpath,$+) $(LDFLAGS) $(LDLIBS)
	./post_make.sh $@

$(MYNAME): $(sources:.cpp=.o) $(MYNAME).so
	$(CXX) -o $(MYNAME) $(call cpath,$+) $(LDFLAGS) $(LDLIBS)
	./post_make.sh $@

../lib/$(MYNAME).so: $(MYNAME).so
	cp $< $@

../bin/$(MYNAME): $(MYNAME)
	cp $< $@

clean: clean-recursive
	rm -f $(call cpath,$(sources:.cpp=.o) $(sources:.cpp=.d)) $(MYNAME) $(MYNAME).so ../bin/$(MYNAME) ../lib/$(MYNAME).so >/dev/null

package:
	./make_package.sh $(MYNAME) $(VERSION) $(MYDEVTEMPLATEID)

include $(ROOT)/PlutoUtils/make.rules
ifeq (,$(findstring clean, $(MAKECMDGOALS)))
-include $(sources:.cpp=.d)
endif
#<-dceag-mf-e->

