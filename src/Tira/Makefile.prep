#<-dceag-mh-b->
GENDEV=../Gen_Devices

SNR_CPPFLAGS ?= <-mkr_t_compile_defines->

ROOT = ..

CXXFLAGS = -Wall -fPIC -ggdb3
CPPFLAGS = -I$(ROOT) -I$(ROOT)/DCE -I/usr/include/mysql $(SNR_CPPFLAGS)
LDFLAGS = -L$(ROOT)/lib
BASELDLIBS = -lSerializeClass -lDCECommon -lPlutoUtils -lmysqlclient_r -lpthread

MYNAME = Tira
VERSION = 2.0.0
MYDEVTEMPLATEID = 1717mplateID

Gen_Dev_Files = $(GENDEV)/TiraBase.cpp
sources = Main.cpp Tira.cpp $(Gen_Dev_Files)
#<-dceag-mh-e->

CXXFLAGS +=
CPPFLAGS +=
LDFLAGS += -L.
XTRALDLIBS = -lMessageTranslation -lIRBase

ifneq (,$(findstring -DARCH64, $(CPPFLAGS)))
        TIRAAPI = TiraAPI_64b
else
        TIRAAPI = TiraAPI
endif

TIRAAPI_SO = lib$(TIRAAPI).so

XTRALDLIBS += -l$(TIRAAPI)

Gen_Dev_Files +=
sources += ../LIRC_DCE/IRReceiverBase.cpp ToCCF.cpp

#<-dceag-mf-b->
LDLIBS = $(XTRALDLIBS) $(BASELDLIBS)

whattodo:
	@echo "type 'make bin', 'make so' or 'make all'"

all: bin so

bin: Tira

so: Tira.so

libTiraAPI.so: ../../proprietary_binaries/Tira/libTiraAPI.so
	cp ../../proprietary_binaries/Tira/libTiraAPI.so $@

../lib/libTiraAPI.so: libTiraAPI.so
	cp libTiraAPI.so $@

libTiraAPI_64b.so: ../../proprietary_binaries/Tira/libTiraAPI_64b.so
	cp ../../proprietary_binaries/Tira/libTiraAPI_64b.so $@

../lib/libTiraAPI_64.so: libTiraAPI_64b.so
	cp libTiraAPI_64b.so $@

Tira.so: $(sources:.cpp=.o)
	$(CXX) -shared -o $(MYNAME).so $(call cpath,$+) $(LDFLAGS) $(LDLIBS)
	cp $@ ../bin
	chmod +x post_make.sh
	./post_make.sh $@

Tira: $(sources:.cpp=.o) $(TIRAAPI_SO)
	$(CXX) -o $(MYNAME) $(call cpath,$+) $(LDFLAGS) $(LDLIBS)
	cp $@ ../bin
	./post_make.sh $@

clean: clean-recursive
	rm -f $(call cpath,$(sources:.cpp=.o) $(sources:.cpp=.d)) Tira.bin Tira.so >/dev/null

package:
	chmod +x make_package.sh
	./make_package.sh $(MYNAME) $(VERSION) $(MYDEVTEMPLATEID)

include $(ROOT)/PlutoUtils/make.rules
ifeq (,$(findstring clean, $(MAKECMDGOALS)))
-include $(sources:.cpp=.d)
endif
#<-dceag-mf-e->

