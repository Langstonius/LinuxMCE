#! /bin/sh /usr/share/dpatch/dpatch-run
## 14_htpc_HP.dpatch by  Alfredo Matas <amatas@gmail.com>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Solucion para el mando del HP MediaCenter

@DPATCH@
diff -urNad lirc-0.8.2~/drivers/lirc_mceusb2/lirc_mceusb2.c lirc-0.8.2/drivers/lirc_mceusb2/lirc_mceusb2.c
--- lirc-0.8.2~/drivers/lirc_mceusb2/lirc_mceusb2.c	2007-05-14 15:01:35.000000000 -0500
+++ lirc-0.8.2/drivers/lirc_mceusb2/lirc_mceusb2.c	2007-09-05 11:07:18.000000000 -0500
@@ -60,7 +60,7 @@
 #include "drivers/kcompat.h"
 #include "drivers/lirc_dev/lirc_dev.h"
 
-#define DRIVER_VERSION          "$Revision: 1.29 $"
+#define DRIVER_VERSION          "$Revision: 1.33 $"
 #define DRIVER_AUTHOR           "Daniel Melander <lirc@rajidae.se>, Martin Blatter <martin_a_blatter@yahoo.com>"
 #define DRIVER_DESC             "Philips eHome USB IR Transciever and Microsoft MCE 2005 Remote Control driver for LIRC"
 #define DRIVER_NAME		"lirc_mceusb2"
@@ -121,22 +121,27 @@
 #define VENDOR_FIC              0x1509
 #define VENDOR_LG               0x043e
 #define VENDOR_MICROSOFT	0x045e
+#define VENDOR_FORMOSA		0x147a
 
 static struct usb_device_id usb_remote_table [] = {
 	{ USB_DEVICE(VENDOR_PHILIPS, 0x0815) },	/* Philips eHome Infrared Transciever */
 	{ USB_DEVICE(VENDOR_PHILIPS, 0x060c) },	/* Philips Infrared Transciever - HP branded */
 	{ USB_DEVICE(VENDOR_SMK, 0x031d) },	/* SMK/Toshiba G83C0004D410 */
 	{ USB_DEVICE(VENDOR_SMK, 0x0322) },	/* SMK eHome Infrared Transceiver (Sony VAIO) */
+	{ USB_DEVICE(VENDOR_SMK, 0x0334) },	/* bundled with Hauppauge PVR-150 */
 	{ USB_DEVICE(VENDOR_TATUNG, 0x9150) },  /* Tatung eHome Infrared Transceiver */
 	{ USB_DEVICE(VENDOR_SHUTTLE, 0xc001) },  /* Shuttle eHome Infrared Transceiver */
         { USB_DEVICE(VENDOR_GATEWAY, 0x3009) },  /* Gateway eHome Infrared Transceiver */
         { USB_DEVICE(VENDOR_MITSUMI, 0x2501) },  /* Mitsumi */
 	{ USB_DEVICE(VENDOR_TOPSEED, 0x0001) },  /* Topseed eHome Infrared Transceiver */ 
+	{ USB_DEVICE(VENDOR_TOPSEED, 0x0006) },  /* Topseed HP eHome Infrared Transceiver */ 
+	{ USB_DEVICE(VENDOR_TOPSEED, 0x0008) },  /* Topseed eHome Infrared Transceiver */ 
 	{ USB_DEVICE(VENDOR_RICAVISION, 0x0010) }, /* Ricavision internal Infrared Transceiver */
 	{ USB_DEVICE(VENDOR_ITRON, 0x7002) },   /* Itron ione Libra Q-11 */
 	{ USB_DEVICE(VENDOR_FIC, 0x9242) },     /* FIC eHome Infrared Transceiver */
 	{ USB_DEVICE(VENDOR_LG, 0x9803) },      /* LG eHome Infrared Transceiver */
 	{ USB_DEVICE(VENDOR_MICROSOFT, 0x00a0) }, /* Microsoft MCE Infrared Transceiver */
+	{ USB_DEVICE(VENDOR_FORMOSA, 0xe015) },   /* Formosa eHome Infrared Transceiver */
 	{ }					/* Terminating entry */
 };
 
@@ -574,8 +579,13 @@
 
 	/* SMK Transceiver does not use the inverted scheme, nor does Topseed*/
 	if ((ir->usbdev->descriptor.idVendor == VENDOR_SMK &&
-	     (ir->usbdev->descriptor.idProduct == 0x031d || ir->usbdev->descriptor.idProduct == 0x0322)) ||
-	    (ir->usbdev->descriptor.idVendor == VENDOR_TOPSEED && ir->usbdev->descriptor.idProduct == 0x0001))
+	     (ir->usbdev->descriptor.idProduct == 0x031d ||
+	      ir->usbdev->descriptor.idProduct == 0x0322 ||
+	      ir->usbdev->descriptor.idProduct == 0x0334)) ||
+	    (ir->usbdev->descriptor.idVendor == VENDOR_TOPSEED && 
+	     (ir->usbdev->descriptor.idProduct == 0x0001 ||
+	      ir->usbdev->descriptor.idProduct == 0x0008)
+	    ))
 	{
 		ir->transmitter_mask = mask;
 	}
