#!/usr/bin/make -f
# Sample debian/rules that uses debhelper.
# GNU copyright 1997 to 1999 by Joey Hess.
# adapted for xine-lib 2001 by Siggi Langauf
# rewritten for new package structure December 2006 by Reinhard Tartler

# Uncomment this to turn on verbose mode.
# export DH_VERBOSE=1

BINARY_ANY_PACKAGES=$(shell dh_listpackages -a)
BINARY_ALL_PACKAGES=$(shell dh_listpackages -i)

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE	?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE	?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
DEB_HOST_ARCH		?= $(shell dpkg-architecture -qDEB_HOST_ARCH)

ifneq ($(DEB_HOST_GNU_TYPE),$(DEB_BUILD_GNU_TYPE))
  $(error cross compiling is not supported by xine)
endif

# predefine as empty
DEB_BUILD_CONFIG_OPTIONS :=
CFLAGS += -g

# add if we don't want optimisations
ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
	DEB_BUILD_CONFIG_OPTIONS += --disable-optimizations
endif

ifneq (,$(findstring mips,$(DEB_HOST_GNU_TYPE)))
	DEB_BUILD_CONFIG_OPTIONS += PTHREAD_LIBS="-lpthread"
endif

# set configure flags here
CONFIGURE_FLAGS := \
	--prefix=/opt/libxine \
	--mandir=\$${prefix}/share/man \
	--with-external-libmad \
	--with-external-a52dec \
	--with-external-libdts \
	--with-external-libmpcdec \
	--enable-ipv6 \
	--without-jack \
	--with-libflac \
	--with-wavpack \
	--with-freetype \
	--disable-vidix \
	--enable-directfb \
	$(DEB_BUILD_CONFIG_OPTIONS) \
	$(DEB_EXTRA_CONFIG_FLAGS) \
	CFLAGS="$(CFLAGS)"

configure: configure-stamp
configure-stamp:
	dh_testdir
	QUILT_PATCHES=debian/patches quilt push -a || test $$? = 2
	./configure $(CONFIGURE_FLAGS)
	touch configure-stamp

build: configure-stamp build-stamp
build-stamp:
	dh_testdir
	$(MAKE)
	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	dh_clean build-stamp configure-stamp install-stamp po/*.gmo
	dh_clean po/stamp-po binary-*-stamp all-files-stamp
	dh_clean generate-arch-files-stamp
	[ ! -f Makefile ] || $(MAKE) distclean
	QUILT_PATCHES=debian/patches quilt pop -a -R || test $$? = 2
	dh_clean debian/libxine1-pluto-bin.install.i386
	dh_clean debian/libxine1*.install.kfreebsd*
	dh_clean config.h config.log
	dh_clean a.out # XXX fix the configure script to not create this

install: build install-stamp
install-stamp: generate-arch-files-stamp
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs
	$(MAKE) install DESTDIR=$(CURDIR)/debian/tmp \
	    LIBRARY_PATH=$(CURDIR)/debian/tmp/opt/libxine/lib
	-(cd debian/tmp && find .) | sort -u | sed -e 's%doc/xine-lib%doc/libxine-pluto-dev%' > $@

binary-common: build install
	@echo working on package $(DH_PACKAGE)
	dh_testdir
	dh_testroot
	dh_install
	test ! -f debian/overrides/$(DH_PACKAGE) || \
	  install -Dm644 \
	       debian/overrides/$(DH_PACKAGE) \
	       debian/$(DH_PACKAGE)/opt/libxine/share/lintian/overrides/$(DH_PACKAGE)
	# mostly, we symlink docs -> libxine1-pluto-bin
	set -e; case "$(DH_PACKAGE)" in \
	    libxine1-pluto-bin|libxine-pluto-dev$(subst lib,|lib,$(BINARY_ALL_PACKAGES))) \
	      dh_installdocs; \
	      dh_installchangelogs -k ChangeLog; \
	      ;; \
	    *) \
	      mkdir -p debian/$(DH_PACKAGE)/opt/libxine/share/doc; \
	      ln -fs libxine1-pluto-bin \
	         debian/$(DH_PACKAGE)/opt/libxine/share/doc/$(DH_PACKAGE); \
	      ;; \
	  esac
#	dh_installman
	dh_link
#dh_strip --dbg-package=libxine1-pluto-dbg
	dh_compress
	dh_fixperms
	dh_makeshlibs -V 'libxine1-pluto (>= 1.1.8)'
	dh_installdeb
	dh_shlibdeps -ldebian/libxine1-pluto-bin/opt/libxine/lib
	dh_gencontrol
	dh_md5sums
	dh_builddeb

# special rules for the -dbg package.
binary-libxine1-pluto-dbg: build install
	@echo working on $@
	dh_testdir		-plibxine1-pluto-dbg
	dh_testroot		-plibxine1-pluto-dbg
	dh_install 		-plibxine1-pluto-dbg
	mkdir -p debian/libxine1-pluto-dbg/opt/libxine/share/doc
	ln -fs libxine1-pluto-bin debian/libxine1-pluto-dbg/opt/libxine/share/doc/libxine1-pluto-dbg
	dh_link			-plibxine1-pluto-dbg
	dh_compress 		-plibxine1-pluto-dbg
	dh_fixperms 		-plibxine1-pluto-dbg
	dh_installdeb 		-plibxine1-pluto-dbg
	dh_shlibdeps 		-plibxine1-pluto-dbg
	dh_gencontrol 		-plibxine1-pluto-dbg
	dh_md5sums 		-plibxine1-pluto-dbg
#	rm -rfv debian/libxine1-pluto-dbg/opt/libxine/lib
#	mv -fv debian/libxine1-pluto-dbg/usr/lib/debug/opt/libxine/* debian/libxine1-pluto-dbg/opt/libxine/
#	rm -rfv debian/libxine1-pluto-dbg/usr
	dh_builddeb 		-plibxine1-pluto-dbg

# Build architecture independant packages using the common target
binary-indep: build install
	set -e; for i in `dh_listpackages -i`; do \
		$(MAKE) -f debian/rules \
	             DH_OPTIONS=-p$$i DH_PACKAGE=$$i binary-common; \
	done
#	-(cd debian/libxine-pluto-dev && find .) | grep -v DEBIAN > $@-stamp

# Build architecture dependant packages using the common targets
binary-arch: build install binary-arch-stamp diff-installed-files
binary-arch-stamp: $(addprefix binary-, $(BINARY_ANY_PACKAGES))
	-cat binary-*-stamp | sort -u > $@

diff-installed-files: install-stamp binary-arch-stamp
	@echo "Comparing installed files from xine-lib Makefiles" \
	      "with files installed in packages:"
	-diff -u $^

generate-arch-files-stamp: \
		debian/libxine1-pluto-bin.install.i386 \
		debian/libxine1-pluto-bin.install.kfreebsd-i386 \
		debian/libxine1-pluto-x.install.kfreebsd-i386 \
		debian/libxine1-pluto-x.install.kfreebsd-amd64 \
		debian/libxine1-pluto-misc-plugins.install.kfreebsd-i386 \
		debian/libxine1-pluto-misc-plugins.install.kfreebsd-amd64 \
		debian/libxine1-pluto-console.install.kfreebsd-i386 \
		debian/libxine1-pluto-console.install.kfreebsd-amd64
	touch generate-arch-files-stamp

# i386 specific plugins are also available for kfreebsd-i386
debian/libxine1-pluto-bin.install.i386: \
		debian/libxine1-pluto-bin.install \
		debian/libxine1-pluto-bin.install.i386.specific
	cat $^ >$@

debian/libxine1-pluto-bin.install.kfreebsd-i386: debian/libxine1-pluto-bin.install.i386
	ln -f $^ $@

# create install files for Debian GNU/kFreeBSD i386/amd64 by dropping
# everything which is not available on those architectures.
debian/libxine1-pluto-x.install.kfreebsd-i386: debian/libxine1-pluto-x.install
	grep -v -e dxr3 -e syncfb $^ >$@

debian/libxine1-pluto-misc-plugins.install.kfreebsd-i386: debian/libxine1-pluto-misc-plugins.install
	grep -v -e dxr3 -e pvr -e v4l -e alsa $^ >$@

debian/libxine1-pluto-console.install.kfreebsd-i386: debian/libxine1-pluto-console.install
	grep -v -e out_fb $^ >$@

debian/libxine1-pluto-%-amd64: debian/libxine1-pluto-%-i386
	ln -f $^ $@


# Any other binary targets build just one binary package at a time.
binary-%: build install
	make -f debian/rules binary-common DH_OPTIONS=-p$* DH_PACKAGE=$*
	-(cd debian/$* && find .) | grep -v DEBIAN > $@-stamp

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary-common binary install configure diff-installed-files


#run only by hand!
ifneq (,$(wildcard /usr/share/misc/config.guess))
config.guess:
	@echo updateing config.guess
	cp -f /usr/share/misc/config.guess config.guess
endif

ifneq (,$(wildcard /usr/share/misc/config.guess))
config.sub: /usr/share/misc/config.sub
	@echo updateing config.sub and config.guess
	cp -f /usr/share/misc/config.sub config.sub
endif

