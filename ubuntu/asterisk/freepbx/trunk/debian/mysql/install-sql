#!/bin/sh

#   Written by Tzafrir Cohen <tzafrir.cohen@xorcom.com>, 
#              Diego Iastrubni <diego.iastrubni@xorcom.com>
#   Copyright (C) 2005, Xorcom
#  
#   All rights reserved.
#  
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#  
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#  
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

# a small script to generate the needed SQL tables by AMPortal


# quoted from the daily cron of mysql:
MYSQL="mysql --defaults-extra-file=/etc/mysql/debian.cnf"
MYSQLADMIN="mysqladmin --defaults-extra-file=/etc/mysql/debian.cnf"
SQLDIR=/usr/share/freepbx-common/sql
SQL_HOST=localhost

DEF_ADMIN_USER="admin"
DEF_ADMIN_PASSWD="admin"

# if you do not want this script to fill the databases with the default
# values, set the environment variable CLEANDB to "1":
# 	CLEANDB=1 /usr/share/freepbx-common/freepbx-install-db
# by default, it will create the tables with the default values from 
# freepbx

CLEANDB=${CLEANDB:-0}

exec_command()
{
	CMD=$1
	$CMD
}

create_db()
{
	DB=$1
	DB_USER=$2
	DB_PASSWD=$3
	SQL_INPUT=$4

	if [ ! -d /var/lib/mysql/$DB ]; then
		exec_command "$MYSQLADMIN create $DB";
	fi

        CMD="GRANT SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,ALTER  ON $DB.* TO $DB_USER@$SQL_HOST IDENTIFIED BY '$DB_PASSWD';"
# 	echo $CMD
	echo $CMD | $MYSQL mysql

	
	if [ $CLEANDB != "1" ]; then
		# in case this breaks in the middle, we need to still be able
		# to run everything. So we need to prevent failed INSERTs from
		# bumping the whole process
		perl -n -e 'unless (/INSERT/ .. /[;]/){print}' $SQL_INPUT | $MYSQL $DB
		perl -n -e 'if (/INSERT/ .. /[;]/){s/\n//; s/;/\n/; print}' $SQL_INPUT \
			| while read new_insert_line
				# insert this line if it has not been already inserted.
				# TODO: update if an insert has failed?
				do echo $new_insert_line | $MYSQL $DB &>/dev/null || true
			done
	fi
}

if [ ! -f /etc/amportal.conf ]; then
	echo "amportal configuration not found, please install amportal.conf"
	echo "	cp /usr/share/freepbx-common/amportal.conf /etc/amportal.conf"
	echo "Modify it to your needs and run this script again."
	exit 1
fi

. /etc/amportal.conf

if [ "xxx$AMPDBUSER" == "xxx" ]; then
	echo "AMPDBUSER is not configured on /etc/amportal.conf"                           >&2
	echo "please update configuration and run /usr/share/freepbx-common/apply_conf.sh" >&2
	exit 1
fi

if [ "xxx$AMPDBPASS" == "xxx" ]; then
	echo "AMPDBPASS is not configured on /etc/amportal.conf"                           >&2
	echo "please update configuration and run /usr/share/freepbx-common/apply_conf.sh" >&2
	exit 1
fi

echo -n "Creating asterisk DB"
create_db "asterisk" "$AMPDBUSER" "$AMPDBPASS" "$SQLDIR/newinstall.sql"
echo "."

echo -n "Creating asteriskcdr DB"
create_db "asteriskcdrdb" "$AMPDBUSER" "$AMPDBPASS" "$SQLDIR/cdr_mysql_table.sql"
echo "."

# Add a default incoming route to the "custom" context demo:
echo -n "Creating default incoming route"
echo "insert into incoming (cidnum, extension, channel, destination) values ('', '', '', 'demo,s,1');" | $MYSQL "asterisk"
echo "."
