#! /bin/sh
# postinst script for freepbx-common
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#

check_file()
{
	filename=$1
	if [ -e $filename ]; then
		if grep -q '^[\t ]*extension[\t ]*=[\t ]*mysql\.so' $filename; then 
			return;
		fi
		echo -n "Fixing $filename for mysql support"
		sed -i -e  's/^;\([ \t]*extension[ \t]*=[ \t]*mysql\.so\)/\1/' $filename
		echo "."
	fi
}

issue_install()
{
	# copy the default configuration file
	cp /usr/share/freepbx-common/amportal.conf /etc/amportal.conf

	# create random passwords for manager and sql
        RAND_PASS=`dd if=/dev/urandom count=20 2>/dev/null | md5sum | awk '{print $1}'` &&
		sed -r -i "s/AMPDBPASS=[a-zA-Z0-9]*/AMPDBPASS=$RAND_PASS/" /etc/amportal.conf
	RAND_PASS=`dd if=/dev/urandom count=20 2>/dev/null | md5sum | awk '{print $1}'` &&
		sed -r -i "s/AMPMGRPASS=[a-zA-Z0-9]*/AMPMGRPASS=$RAND_PASS/" /etc/amportal.conf
		
	# don't trust anytyhing, as in the future we might ship the stock amportal.conf
	# provided by upstream, instead of our own amportal.conf
	sed -r -i "s|AMPWEBROOT=[a-zA-Z0-9/]*|AMPWEBROOT=/usr/share/freepbx|" /etc/amportal.conf
	sed -r -i "s|AMPBIN=[a-zA-Z0-9/]*|AMPBIN=/usr/share/asterisk/bin|" /etc/amportal.conf
	/usr/share/freepbx-common/install-sql
	/usr/share/freepbx-common/install_amp --no-files

	# apply new configuration
	update-freepbx

	# if it works, enable the core module
	# TODO: is this needed? the default install does not enable the core module?
        /usr/share/asterisk/bin/module_admin install core || echo "Continuing anyway"
}

issue_upgrade()
{
	# if you upgarde freepbx from amp you might get a wrong AMPWEBROOT. 
	# The webroot is part to this package then we fix it by force		
	# Same for asterisk bin directory
	echo -n "Fixing /etc/amportal.conf"
	sed -r -i "s|AMPWEBROOT=[a-zA-Z0-9/]*|AMPWEBROOT=/usr/share/freepbx|" /etc/amportal.conf
	sed -r -i "s|AMPBIN=[a-zA-Z0-9/]*|AMPBIN=/usr/share/asterisk/bin|" /etc/amportal.conf
	echo "."

	# apply new configuration
	update-freepbx

	# do the updates needed
	if ! /usr/share/freepbx-common/install_amp --no-files ; then
		# this may fail for so many reasons... let the user do it himself 
		# after the package has been installed
		# TODO: use debconf. Debian policy says echo is bad
		echo \
"Upgrade failed, continuing anyway. Fix your system and execute:
	/usr/share/freepbx-common/install_amp --no-files
	
You may want also to enable the code module using this command 
(this can be done from the GUI as well):
	/usr/share/asterisk/bin/module_admin install core
"
	fi
}

case "$1" in
	configure)
		# we check only php4, as php5 on etch has other (smarter) tricks
		# on php4+etch, if this trick is enabled, do not check for this 
		# at all. 
		# TODO: is this still valid in Etch? I had to do it in Sarge
#		if [ ! -f /etc/php4/conf.d/mysql.ini ]; then
#			check_file "/etc/php4/cgi/php.ini"
#			check_file "/etc/php4/cli/php.ini"
#			check_file "/etc/php4/apache/php.ini"
#			check_file "/etc/php4/apache2/php.ini"
#		fi

#		echo -n "Fixing webroot permissions"
#		chown -R www-data:www-data /usr/share/freepbx/admin/modules
#		chmod -R g+rw              /usr/share/freepbx/admin/modules

		# fix log permissions, if not available - create them
		touch /var/log/asterisk/
		for i in retrieve opbounce; do 
			j=/var/log/asterisk/freepbx-$i.log
			touch $j
			chown asterisk:asterisk $j
			chmod g+rw $j
		done

		# create spool directories, needed for voicemail module
		for i in default device; do
			j=/var/spool/asterisk/voicemail/$i
			mkdir -p $j
			chown asterisk:asterisk $j
			chmod g+rw $j
		done

		# is this an upgrade? or clean install?
		if [ -e  /etc/amportal.conf ]; then
			issue_upgrade
		else
			issue_install
		fi
		
		# amportal.conf contains passwords, it should not be wold
		# readable, adjust permissions
		# reported upstread as: http://freepbx.org/trac/ticket/1878
		chown asterisk: /etc/amportal.conf
		chmod 640 /etc/amportal.conf

		# list of web-servers supported.
		# TODO: fill this list using 'apt-cache show httpd-cgi'
		WEBSERVERS="apache apache2 mathopd lighttpd"
		
    	        # on fresh installs, we need to modify the www-data user this 
		# might be already done by other packages, or a previous version
	        # of this package. 
    		if groups www-data | grep -q -w -v asterisk ; then
	                echo -n "Changing permissions of the web server"
				adduser www-data asterisk
            		echo "."

			# TODO - there must be a generic way of doying this stuff
    		        echo "Restarting the httpd server to take usage of the new ownership"
			HTTPD_ACTION=restart
		else
			# on upgrades, reloading apache(s) is enough
			HTTPD_ACTION=reload
	        fi

		for i in $WEBSERVERS; do
			if test -x /etc/init.d/$i; then
				invoke-rc.d $i $HTTPD_ACTION
			fi
		done
	;;
	
	abort-upgrade|abort-remove|abort-deconfigure)
	;;
	
	*)
		echo "postinst called with unknown argument \`$1'" >&2
		exit 1
	;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
