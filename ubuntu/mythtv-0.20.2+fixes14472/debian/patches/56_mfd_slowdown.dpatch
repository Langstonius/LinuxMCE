#! /bin/sh /usr/share/dpatch/dpatch-run
## 56_mfd_slowdown.dpatch by Daniel Kristjansson
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Adds a new DB setting DDSlowDownFactor which you can use to
## DP: slow down data direct schedule loads so as to minimize the
## DP: effect on other mysql users, including mythtv itself.

@DPATCH@
diff -urNad mythtv-0.20+fixes13716~/libs/libmythtv/datadirect.h mythtv-0.20+fixes13716/libs/libmythtv/datadirect.h
--- blah/libs/libmythtv/datadirect.h	(revision 17034)
+++ blah/libs/libmythtv/datadirect.h	(working copy)
@@ -9,6 +9,9 @@
 #include <vector>
 using namespace std;
 
+// MythTV headers
+#include "mythdbcon.h"
+
 enum DD_PROVIDERS
 {
     DD_ZAP2IT           = 0,
@@ -215,7 +218,7 @@
 {
   public:
     DDStructureParser(DataDirectProcessor& _ddparent) :
-        parent(_ddparent) {}
+    parent(_ddparent), query(MSqlQuery::DDCon()) {}
 
     bool startElement(const QString &pnamespaceuri, const QString &plocalname,
                       const QString &pqname, const QXmlAttributes &pxmlatts);
@@ -231,6 +234,7 @@
   private:
     DataDirectProcessor     &parent;
 
+    MSqlQuery                query;
     QString                  currtagname;
     DataDirectStation        curr_station;
     DataDirectLineup         curr_lineup;
@@ -353,6 +357,8 @@
                         QDateTime  pstartDate,   QDateTime  pendDate,
                         QString   &err_txt,      bool      &is_pipe);
 
+  public:
+    static uint   slowDownFactor;
 
   private:
     uint          listings_provider;
diff -urNad mythtv-0.20+fixes13716~/libs/libmythtv/datadirect.cpp mythtv-0.20+fixes13716/libs/libmythtv/datadirect.cpp
--- blah/libs/libmythtv/datadirect.cpp	(revision 17034)
+++ blah/libs/libmythtv/datadirect.cpp	(working copy)
@@ -32,6 +32,8 @@
 static QMutex lineup_type_lock;
 static QMap<QString,uint> lineupid_to_srcid;
 static QMap<uint,QString> srcid_to_type;
+static unsigned long long insert_count = 0;
+uint DataDirectProcessor::slowDownFactor = 5;
 
 static void    set_lineup_type(const QString &lineupid, const QString &type);
 static QString get_lineup_type(uint sourceid);
@@ -208,7 +210,9 @@
     (void)pnamespaceuri;
     (void)plocalname;
 
-    MSqlQuery query(MSqlQuery::DDCon());
+    if (0 == (insert_count % 75))
+        usleep(100 * 100  * DataDirectProcessor::slowDownFactor);
+    insert_count++;
 
     if (pqname == "station") 
     {
@@ -445,8 +449,6 @@
                 VERBOSE(VB_IMPORTANT, LOC + ExpirationDateMessage);
             }
 
-            MSqlQuery query(MSqlQuery::DDCon());
-
             QString querystr = QString(
                 "UPDATE settings "
                 "SET data ='%1' "
@@ -599,11 +601,23 @@
 
 void DataDirectProcessor::UpdateProgramViewTable(uint sourceid)
 {
+    VERBOSE(VB_IMPORTANT, QString("UpdateProgramViewTable(%1)").arg(sourceid));
     MSqlQuery query(MSqlQuery::DDCon());
 
-    if (!query.exec("TRUNCATE TABLE dd_v_program;"))
+    if (!query.exec("TRUNCATE TABLE dd_v_program"))
         MythContext::DBError("Truncating temporary table dd_v_program", query);
 
+    MSqlQuery query_stations(MSqlQuery::DDCon());
+    query_stations.prepare(
+        "SELECT xmltvid FROM channel WHERE sourceid = :SOURCEID");
+    query_stations.bindValue(":SOURCEID", sourceid);
+    if (!query_stations.exec())
+    {
+        MythContext::DBError("Querying channels for dd_v_program table",
+                             query_stations);
+        return;
+    }
+    
     QString qstr =
         "INSERT INTO dd_v_program "
         "     ( chanid,         starttime,       endtime,         "
@@ -625,18 +639,36 @@
         "FROM channel, dd_schedule, dd_program "
         "WHERE ((dd_schedule.programid = dd_program.programid)  AND "
         "       (channel.xmltvid       = dd_schedule.stationid) AND "
+        "       (channel.xmltvid       = :XMLTVID)              AND "
         "       (channel.sourceid      = :SOURCEID))";
 
-    query.prepare(qstr);
+    uint i = 0;
+    while (query_stations.next())
+    {
+        i++;
+        usleep(250 * 100  * slowDownFactor);
+        query.prepare(qstr);
+        query.bindValue(":XMLTVID",  query_stations.value(0).toString());
+        query.bindValue(":SOURCEID", sourceid);
+        if (!query.exec())
+        {
+            MythContext::DBError(
+                "Populating temporary table dd_v_program", query);
+        }
+    }
 
-    query.bindValue(":SOURCEID", sourceid);
+    cout<<endl;
+    VERBOSE(VB_GENERAL, "ANALYZEing dd_v_program");
+    if (i)
+        sleep(5);
 
-    if (!query.exec())
-        MythContext::DBError("Populating temporary table dd_v_program", query);
-
     if (!query.exec("ANALYZE TABLE dd_v_program;"))
         MythContext::DBError("Analyzing table dd_v_program", query);
 
+    VERBOSE(VB_GENERAL, "ANALYZEing dd_productioncrew");
+    if (i)
+        sleep(5);
+
     if (!query.exec("ANALYZE TABLE dd_productioncrew;"))
         MythContext::DBError("Analyzing table dd_productioncrew", query);
 }
@@ -1059,6 +1091,8 @@
 bool DataDirectProcessor::GrabData(const QDateTime pstartDate,
                                    const QDateTime pendDate)
 {
+    slowDownFactor = gContext->GetNumSetting("DDSlowDownFactor", 5);
+
     QString msg = (pstartDate.addSecs(1) == pendDate) ? "channel" : "listing";
     VERBOSE(VB_GENERAL, "Grabbing " << msg << " data");
 
@@ -1150,8 +1184,14 @@
         QXmlInputSource  xmlsource(&f);
         QXmlSimpleReader xmlsimplereader;
         xmlsimplereader.setContentHandler(&ddhandler);
+        VERBOSE(VB_IMPORTANT, "Parsing downloaded XML -- begin");
         xmlsimplereader.parse(xmlsource);
+        cout<<endl;
+        VERBOSE(VB_IMPORTANT, "Parsing downloaded XML -- end");
         f.close();
+        VERBOSE(VB_IMPORTANT, LOC +
+                QString("Slept %1 seconds to releave pressure on DB")
+                .arg((insert_count/50) * 0.1));
     }
     else
     {
diff -urNad mythtv-0.20+fixes13716~/programs/mythfilldatabase/filldata.cpp mythtv-0.20+fixes13716/programs/mythfilldatabase/filldata.cpp
--- blah/programs/mythfilldatabase/filldata.cpp	(revision 17034)
+++ blah/programs/mythfilldatabase/filldata.cpp	(working copy)
@@ -924,86 +924,144 @@
     return ok;
 }
 
-void DataDirectProgramUpdate() 
+void DataDirectProgramUpdate(uint sourceid)
 {
     MSqlQuery query(MSqlQuery::DDCon());
 
-    //cerr << "Adding rows to main program table from view table..\n";
-    if (!query.exec("INSERT IGNORE INTO program (chanid, starttime, endtime, "
-                    "title, subtitle, description, "
-                    "showtype, category, category_type, "
-                    "airdate, stars, previouslyshown, stereo, subtitled, "
-                    "hdtv, closecaptioned, partnumber, parttotal, seriesid, "
-                    "originalairdate, colorcode, syndicatedepisodenumber, "
-                    "programid) "
-                    "SELECT dd_v_program.chanid, "
-                    "DATE_ADD(starttime, INTERVAL channel.tmoffset MINUTE), "
-                    "DATE_ADD(endtime, INTERVAL channel.tmoffset MINUTE), "
-                    "title, subtitle, description, "
-                    "showtype, dd_genre.class, category_type, "
-                    "airdate, stars, previouslyshown, stereo, subtitled, "
-                    "hdtv, closecaptioned, partnumber, parttotal, seriesid, "
-                    "originalairdate, colorcode, syndicatedepisodenumber, "
-                    "dd_v_program.programid FROM (dd_v_program, channel) "
-                    "LEFT JOIN dd_genre ON ("
-                    "dd_v_program.programid = dd_genre.programid AND "
-                    "dd_genre.relevance = '0') "
-                    "WHERE dd_v_program.chanid = channel.chanid;"))
-        MythContext::DBError("Inserting into program table", query);
+    MSqlQuery query_channels(MSqlQuery::DDCon());
+    query_channels.prepare(
+        "SELECT chanid FROM channel WHERE sourceid = :SOURCEID");
+    query_channels.bindValue(":SOURCEID", sourceid);
+    if (!query_channels.exec())
+    {
+        MythContext::DBError("Querying channels for dd program update", query);
+        return;
+    }
 
-    //cerr << "Finished adding rows to main program table...\n";
-    //cerr << "Adding program ratings...\n";
+    while (query_channels.next())
+    {
+        uint chanid = query_channels.value(0).toUInt();
 
-    if (!query.exec("INSERT IGNORE INTO programrating (chanid, starttime, "
-                    "system, rating) SELECT dd_v_program.chanid, "
-                    "DATE_ADD(starttime, INTERVAL channel.tmoffset MINUTE), "
-                    " 'MPAA', "
-                    "mpaarating FROM dd_v_program, channel WHERE "
-                    "mpaarating != '' AND dd_v_program.chanid = "
-                    "channel.chanid"))
-        MythContext::DBError("Inserting into programrating table", query);
+        VERBOSE(VB_GENERAL,
+                QString("DataDirectProgramUpdate: Updating chanid %1")
+                .arg(chanid));
 
-    if (!query.exec("INSERT IGNORE INTO programrating (chanid, starttime, "
-                    "system, rating) SELECT dd_v_program.chanid, "
-                    "DATE_ADD(starttime, INTERVAL channel.tmoffset MINUTE), "
-                    "'VCHIP', "
-                    "tvrating FROM dd_v_program, channel WHERE tvrating != ''"
-                    " AND dd_v_program.chanid = channel.chanid"))
-        MythContext::DBError("Inserting into programrating table", query);
+        query.prepare(
+            "INSERT IGNORE INTO program "
+            "    ( chanid, starttime, endtime, "
+            "      title, subtitle, description, "
+            "      showtype, category, category_type, "
+            "      airdate, stars, previouslyshown, stereo, subtitled, "
+            "      hdtv, closecaptioned, partnumber, parttotal, seriesid, "
+            "      originalairdate, colorcode, syndicatedepisodenumber, "
+            "      programid) "
+            "      SELECT dd_v_program.chanid, "
+            "          DATE_ADD(starttime, INTERVAL channel.tmoffset MINUTE), "
+            "          DATE_ADD(endtime, INTERVAL channel.tmoffset MINUTE), "
+            "          title, subtitle, description, "
+            "          showtype, dd_genre.class, category_type, "
+            "          airdate, stars, previouslyshown, stereo, subtitled, "
+            "          hdtv, closecaptioned, partnumber, parttotal, seriesid, "
+            "          originalairdate, colorcode, syndicatedepisodenumber, "
+            "          dd_v_program.programid FROM (dd_v_program, channel) "
+            "      LEFT JOIN dd_genre ON ("
+            "          dd_v_program.programid = dd_genre.programid AND "
+            "          dd_genre.relevance = '0') "
+            "      WHERE dd_v_program.chanid = channel.chanid AND "
+            "            channel.chanid = :CHANID");
+        query.bindValue(":CHANID", chanid);
 
-    //cerr << "Finished adding program ratings...\n";
-    //cerr << "Populating people table from production crew list...\n";
+        if (!query.exec())
+            MythContext::DBError("Inserting into program table", query);
 
-    if (!query.exec("INSERT IGNORE INTO people (name) SELECT fullname "
-                    "FROM dd_productioncrew;"))
-        MythContext::DBError("Inserting into people table", query);
+        usleep(500 * 100  * DataDirectProcessor::slowDownFactor);
 
-    //cerr << "Finished adding people...\n";
-    //cerr << "Adding credits entries from production crew list...\n";
+        query.prepare(
+            "INSERT IGNORE INTO programrating "
+            "    ( chanid, starttime, system, rating) "
+            "    SELECT "
+            "        dd_v_program.chanid, "
+            "        DATE_ADD(starttime, INTERVAL channel.tmoffset MINUTE), "
+            "        'MPAA', mpaarating "
+            "    FROM dd_v_program, channel "
+            "    WHERE mpaarating != ''                     AND "
+            "          dd_v_program.chanid = channel.chanid AND "
+            "          channel.chanid = :CHANID");
+        query.bindValue(":CHANID", chanid);
 
-    if (!query.exec("INSERT IGNORE INTO credits (chanid, starttime, person, "
-                    "role) SELECT dd_v_program.chanid, "
-                    "DATE_ADD(starttime, INTERVAL channel.tmoffset MINUTE), "
-                    "person, role "
-                    "FROM dd_productioncrew, dd_v_program, channel, people "
-                    "WHERE "
-                    "((dd_productioncrew.programid = dd_v_program.programid) "
-                    "AND (dd_productioncrew.fullname = people.name)) "
-                    "AND dd_v_program.chanid = channel.chanid;"))
-        MythContext::DBError("Inserting into credits table", query);
+        if (!query.exec())
+            MythContext::DBError("Inserting into programrating table", query);
 
-    //cerr << "Finished inserting credits...\n";
-    //cerr << "Adding genres...\n";
+        usleep(250 * 100  * DataDirectProcessor::slowDownFactor);
 
-    if (!query.exec("INSERT IGNORE INTO programgenres (chanid, starttime, "
-                    "relevance, genre) SELECT dd_v_program.chanid, "
-                    "DATE_ADD(starttime, INTERVAL channel.tmoffset MINUTE), "
-                    "relevance, class FROM dd_v_program, dd_genre, channel "
-                    "WHERE (dd_v_program.programid = dd_genre.programid) "
-                    "AND dd_v_program.chanid = channel.chanid"))
-        MythContext::DBError("Inserting into programgenres table",query);
+        query.prepare(
+            "INSERT IGNORE INTO programrating "
+            "    ( chanid, starttime, system, rating) "
+            "    SELECT dd_v_program.chanid, "
+            "           DATE_ADD(starttime, INTERVAL channel.tmoffset MINUTE), "
+            "           'VCHIP', tvrating "
+            "    FROM dd_v_program, channel "
+            "    WHERE tvrating != ''                       AND "
+            "          dd_v_program.chanid = channel.chanid AND "
+            "          channel.chanid = :CHANID");
+        query.bindValue(":CHANID", chanid);
 
-    //cerr << "Done...\n";
+        if (!query.exec())
+            MythContext::DBError("Inserting into programrating table", query);
+
+        usleep(250 * 100  * DataDirectProcessor::slowDownFactor);
+
+        query.prepare(
+            "INSERT IGNORE INTO credits (chanid, starttime, person, role) "
+            "    SELECT dd_v_program.chanid, "
+            "           DATE_ADD(starttime, INTERVAL channel.tmoffset MINUTE), "
+            "           person, role "
+            "    FROM dd_productioncrew, dd_v_program, channel, people "
+            "    WHERE ((dd_productioncrew.programid = "
+            "            dd_v_program.programid) AND "
+            "           (dd_productioncrew.fullname = people.name)) AND "
+            "            dd_v_program.chanid = channel.chanid       AND "
+            "            channel.chanid = :CHANID");
+        query.bindValue(":CHANID", chanid);
+
+        if (!query.exec())
+            MythContext::DBError("Inserting into credits table", query);
+
+        usleep(250 * 100  * DataDirectProcessor::slowDownFactor);
+
+        query.prepare(
+            "INSERT IGNORE INTO programgenres "
+            "    ( chanid, starttime, relevance, genre) "
+            "    SELECT dd_v_program.chanid, "
+            "           DATE_ADD(starttime, INTERVAL channel.tmoffset MINUTE), "
+            "           relevance, class "
+            "    FROM dd_v_program, dd_genre, channel "
+            "    WHERE dd_v_program.programid = dd_genre.programid AND "
+            "          dd_v_program.chanid = channel.chanid        AND "
+            "          channel.chanid = :CHANID");
+        query.bindValue(":CHANID", chanid);
+
+        if (!query.exec())
+            MythContext::DBError("Inserting into programgenres table",query);
+
+        usleep(250 * 100  * DataDirectProcessor::slowDownFactor);
+    }
+
+    usleep(5000 * 100  * DataDirectProcessor::slowDownFactor);
+    
+    VERBOSE(VB_GENERAL, "DataDirectProgramUpdate: updating people -- begin");
+
+    if (!query.exec(
+            "INSERT IGNORE INTO people (name) "
+            "    SELECT fullname "
+            "    FROM dd_productioncrew"))
+    {
+        MythContext::DBError("Inserting into people table", query);
+    }
+
+    VERBOSE(VB_GENERAL, "DataDirectProgramUpdate: updating people -- end");
+
+    usleep(5000 * 100  * DataDirectProcessor::slowDownFactor);
 }
 
 bool grabDDData(Source source, int poffset, QDate pdate, int ddSource) 
@@ -1102,9 +1160,11 @@
     VERBOSE(VB_GENERAL, "Main temp tables populated.");
     if (!channel_update_run)
     {
+        sleep(1);
         VERBOSE(VB_GENERAL, "Updating myth channels.");
         DataDirectStationUpdate(source);
         VERBOSE(VB_GENERAL, "Channels updated.");
+        sleep(1);
         channel_update_run = true;
     }
 
@@ -1139,7 +1199,7 @@
     VERBOSE(VB_GENERAL, "Data for source cleared.");
     
     VERBOSE(VB_GENERAL, "Updating programs.");
-    DataDirectProgramUpdate();
+    DataDirectProgramUpdate(source.id);
     VERBOSE(VB_GENERAL, "Program table update complete.");
 
     return true;
